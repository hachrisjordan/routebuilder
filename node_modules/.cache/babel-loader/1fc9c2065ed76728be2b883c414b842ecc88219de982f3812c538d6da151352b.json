{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Route builder/RouteBuilder/src/components/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AirportSearch } from './AirportSearch';\nimport { FlightResults } from './FlightResults';\nimport UA_miles from '../data/UA_miles.json';\nimport SQ_miles from '../data/SQ_miles.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchPage() {\n  _s();\n  const [departureAirport, setDepartureAirport] = useState('');\n  const [arrivalAirport, setArrivalAirport] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n\n  // Load initial values from URL params\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const dep = params.get('from');\n    const arr = params.get('to');\n    if (dep) setDepartureAirport(dep);\n    if (arr) setArrivalAirport(arr);\n  }, []);\n  const findPossibleRoutes = (origin, destination, visited = new Set(), path = []) => {\n    // Combine both airlines' routes\n    const allRoutes = [...UA_miles, ...SQ_miles];\n    const routes = [];\n\n    // Base case: if we've found a path to the destination\n    if (path.length > 0 && path[path.length - 1].Arrival_IATA === destination) {\n      return [path];\n    }\n\n    // Don't allow paths longer than 3 segments\n    if (path.length >= 3) {\n      return [];\n    }\n\n    // Get all possible next segments\n    const currentPoint = path.length === 0 ? origin : path[path.length - 1].Arrival_IATA;\n    const possibleSegments = allRoutes.filter(route => route.Departure_IATA === currentPoint && !visited.has(route.Arrival_IATA));\n\n    // Try each possible next segment\n    for (const segment of possibleSegments) {\n      const newVisited = new Set(visited);\n      newVisited.add(segment.Arrival_IATA);\n      const newPath = [...path, {\n        Departure_IATA: segment['Departure IATA'],\n        Arrival_IATA: segment['Arrival IATA'],\n        Distance: segment['Flight Distance (miles)']\n      }];\n      const newRoutes = findPossibleRoutes(origin, destination, newVisited, newPath);\n      routes.push(...newRoutes);\n    }\n    return routes;\n  };\n  const handleSearch = () => {\n    if (departureAirport && arrivalAirport) {\n      // Update URL with search parameters\n      const params = new URLSearchParams();\n      params.set('from', departureAirport);\n      params.set('to', arrivalAirport);\n      window.history.pushState({}, '', `${window.location.pathname}?${params.toString()}`);\n\n      // Find all possible routes\n      const visited = new Set([departureAirport]);\n      const routes = findPossibleRoutes(departureAirport, arrivalAirport, visited);\n      setSearchResults(routes);\n      setShowResults(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-boxes\",\n      children: [/*#__PURE__*/_jsxDEV(AirportSearch, {\n        label: \"Departure\",\n        value: departureAirport,\n        onChange: setDepartureAirport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AirportSearch, {\n        label: \"Arrival\",\n        value: arrivalAirport,\n        onChange: setArrivalAirport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlightResults, {\n      results: searchResults,\n      isVisible: showResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"agTJo1RkfFW1jBvtGrRU4i+ZV1Y=\");\n_c = SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","AirportSearch","FlightResults","UA_miles","SQ_miles","jsxDEV","_jsxDEV","SearchPage","_s","departureAirport","setDepartureAirport","arrivalAirport","setArrivalAirport","searchResults","setSearchResults","showResults","setShowResults","params","URLSearchParams","window","location","search","dep","get","arr","findPossibleRoutes","origin","destination","visited","Set","path","allRoutes","routes","length","Arrival_IATA","currentPoint","possibleSegments","filter","route","Departure_IATA","has","segment","newVisited","add","newPath","Distance","newRoutes","push","handleSearch","set","history","pushState","pathname","toString","className","children","label","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","results","isVisible","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Route builder/RouteBuilder/src/components/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AirportSearch } from './AirportSearch';\nimport { FlightResults } from './FlightResults';\nimport UA_miles from '../data/UA_miles.json';\nimport SQ_miles from '../data/SQ_miles.json';\n\nexport function SearchPage() {\n  const [departureAirport, setDepartureAirport] = useState('');\n  const [arrivalAirport, setArrivalAirport] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n\n  // Load initial values from URL params\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const dep = params.get('from');\n    const arr = params.get('to');\n    \n    if (dep) setDepartureAirport(dep);\n    if (arr) setArrivalAirport(arr);\n  }, []);\n\n  const findPossibleRoutes = (origin, destination, visited = new Set(), path = []) => {\n    // Combine both airlines' routes\n    const allRoutes = [...UA_miles, ...SQ_miles];\n    const routes = [];\n\n    // Base case: if we've found a path to the destination\n    if (path.length > 0 && path[path.length - 1].Arrival_IATA === destination) {\n      return [path];\n    }\n\n    // Don't allow paths longer than 3 segments\n    if (path.length >= 3) {\n      return [];\n    }\n\n    // Get all possible next segments\n    const currentPoint = path.length === 0 ? origin : path[path.length - 1].Arrival_IATA;\n    const possibleSegments = allRoutes.filter(route => \n      route.Departure_IATA === currentPoint && \n      !visited.has(route.Arrival_IATA)\n    );\n\n    // Try each possible next segment\n    for (const segment of possibleSegments) {\n      const newVisited = new Set(visited);\n      newVisited.add(segment.Arrival_IATA);\n\n      const newPath = [...path, {\n        Departure_IATA: segment['Departure IATA'],\n        Arrival_IATA: segment['Arrival IATA'],\n        Distance: segment['Flight Distance (miles)']\n      }];\n\n      const newRoutes = findPossibleRoutes(\n        origin,\n        destination,\n        newVisited,\n        newPath\n      );\n\n      routes.push(...newRoutes);\n    }\n\n    return routes;\n  };\n\n  const handleSearch = () => {\n    if (departureAirport && arrivalAirport) {\n      // Update URL with search parameters\n      const params = new URLSearchParams();\n      params.set('from', departureAirport);\n      params.set('to', arrivalAirport);\n      \n      window.history.pushState(\n        {}, \n        '', \n        `${window.location.pathname}?${params.toString()}`\n      );\n      \n      // Find all possible routes\n      const visited = new Set([departureAirport]);\n      const routes = findPossibleRoutes(departureAirport, arrivalAirport, visited);\n      \n      setSearchResults(routes);\n      setShowResults(true);\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"search-boxes\">\n        <AirportSearch \n          label=\"Departure\"\n          value={departureAirport}\n          onChange={setDepartureAirport}\n        />\n        <AirportSearch \n          label=\"Arrival\"\n          value={arrivalAirport}\n          onChange={setArrivalAirport}\n        />\n        <button onClick={handleSearch}>Search Flights</button>\n      </div>\n      <FlightResults \n        results={searchResults} \n        isVisible={showResults}\n      />\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}