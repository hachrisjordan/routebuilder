{"ast":null,"code":"import React,{useState}from'react';import{airports}from'../data/airports';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function AirportSearch(_ref){let{label,value,onChange}=_ref;const[suggestions,setSuggestions]=useState([]);const[inputValue,setInputValue]=useState('');const handleInputChange=e=>{const input=e.target.value;setInputValue(input);if(input.length>1){// First find IATA matches\nconst iataMatches=airports.filter(airport=>airport.IATA.toLowerCase().includes(input.toLowerCase()));// Then find name matches, excluding airports already matched by IATA\nconst nameMatches=airports.filter(airport=>!iataMatches.includes(airport)&&airport.Name.toLowerCase().includes(input.toLowerCase()));// Combine the results, IATA matches first\nconst filtered=[...iataMatches,...nameMatches].slice(0,5);setSuggestions(filtered);}else{setSuggestions([]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"airport-search\",children:[/*#__PURE__*/_jsx(\"label\",{children:label}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange,placeholder:`Enter ${label} airport`}),suggestions.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions\",children:suggestions.map(airport=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>{onChange(airport.IATA);setInputValue(airport.IATA);setSuggestions([]);},children:[airport.IATA,\" - \",airport.Name,\" (\",airport.Country,\")\"]},airport.IATA))})]});}","map":{"version":3,"names":["React","useState","airports","jsx","_jsx","jsxs","_jsxs","AirportSearch","_ref","label","value","onChange","suggestions","setSuggestions","inputValue","setInputValue","handleInputChange","e","input","target","length","iataMatches","filter","airport","IATA","toLowerCase","includes","nameMatches","Name","filtered","slice","className","children","type","placeholder","map","onClick","Country"],"sources":["/Users/hanguyen/Route builder/RouteBuilder/src/components/AirportSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { airports } from '../data/airports';\n\nexport function AirportSearch({ label, value, onChange }) {\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    const input = e.target.value;\n    setInputValue(input);\n    \n    if (input.length > 1) {\n      // First find IATA matches\n      const iataMatches = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(input.toLowerCase())\n      );\n      \n      // Then find name matches, excluding airports already matched by IATA\n      const nameMatches = airports.filter(airport => \n        !iataMatches.includes(airport) && \n        airport.Name.toLowerCase().includes(input.toLowerCase())\n      );\n      \n      // Combine the results, IATA matches first\n      const filtered = [...iataMatches, ...nameMatches].slice(0, 5);\n      setSuggestions(filtered);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  return (\n    <div className=\"airport-search\">\n      <label>{label}</label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={`Enter ${label} airport`}\n      />\n      {suggestions.length > 0 && (\n        <ul className=\"suggestions\">\n          {suggestions.map(airport => (\n            <li \n              key={airport.IATA}\n              onClick={() => {\n                onChange(airport.IATA);\n                setInputValue(airport.IATA);\n                setSuggestions([]);\n              }}\n            >\n              {airport.IATA} - {airport.Name} ({airport.Country})\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,MAAO,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA6B,IAA5B,CAAEC,KAAK,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACtD,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAe,iBAAiB,CAAIC,CAAC,EAAK,CAC/B,KAAM,CAAAC,KAAK,CAAGD,CAAC,CAACE,MAAM,CAACT,KAAK,CAC5BK,aAAa,CAACG,KAAK,CAAC,CAEpB,GAAIA,KAAK,CAACE,MAAM,CAAG,CAAC,CAAE,CACpB;AACA,KAAM,CAAAC,WAAW,CAAGnB,QAAQ,CAACoB,MAAM,CAACC,OAAO,EACzCA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,CAAC,CAAC,CACzD,CAAC,CAED;AACA,KAAM,CAAAE,WAAW,CAAGzB,QAAQ,CAACoB,MAAM,CAACC,OAAO,EACzC,CAACF,WAAW,CAACK,QAAQ,CAACH,OAAO,CAAC,EAC9BA,OAAO,CAACK,IAAI,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,CAAC,CAAC,CACzD,CAAC,CAED;AACA,KAAM,CAAAI,QAAQ,CAAG,CAAC,GAAGR,WAAW,CAAE,GAAGM,WAAW,CAAC,CAACG,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAC7DjB,cAAc,CAACgB,QAAQ,CAAC,CAC1B,CAAC,IAAM,CACLhB,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,mBACEP,KAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5B,IAAA,UAAA4B,QAAA,CAAQvB,KAAK,CAAQ,CAAC,cACtBL,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXvB,KAAK,CAAEI,UAAW,CAClBH,QAAQ,CAAEK,iBAAkB,CAC5BkB,WAAW,CAAE,SAASzB,KAAK,UAAW,CACvC,CAAC,CACDG,WAAW,CAACQ,MAAM,CAAG,CAAC,eACrBhB,IAAA,OAAI2B,SAAS,CAAC,aAAa,CAAAC,QAAA,CACxBpB,WAAW,CAACuB,GAAG,CAACZ,OAAO,eACtBjB,KAAA,OAEE8B,OAAO,CAAEA,CAAA,GAAM,CACbzB,QAAQ,CAACY,OAAO,CAACC,IAAI,CAAC,CACtBT,aAAa,CAACQ,OAAO,CAACC,IAAI,CAAC,CAC3BX,cAAc,CAAC,EAAE,CAAC,CACpB,CAAE,CAAAmB,QAAA,EAEDT,OAAO,CAACC,IAAI,CAAC,KAAG,CAACD,OAAO,CAACK,IAAI,CAAC,IAAE,CAACL,OAAO,CAACc,OAAO,CAAC,GACpD,GAROd,OAAO,CAACC,IAQX,CACL,CAAC,CACA,CACL,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}