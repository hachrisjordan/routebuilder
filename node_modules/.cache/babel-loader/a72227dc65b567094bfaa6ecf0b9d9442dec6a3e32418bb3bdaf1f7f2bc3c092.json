{"ast":null,"code":"import React,{useState}from'react';import'./FlightResults.css';import{airports}from'../data/airports';import pricingChart from'../data/formatted_partner_airlines_pricing_chart.json';import{FaSort,FaSortUp,FaSortDown,FaSearch,FaTimes}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function calculateDirectDistance(origin,destination){const originAirport=airports.find(a=>a.IATA===origin);const destAirport=airports.find(a=>a.IATA===destination);if(!originAirport||!destAirport)return null;const R=3959;// Earth's radius in miles\nconst lat1=originAirport.Latitude*Math.PI/180;const lat2=destAirport.Latitude*Math.PI/180;const dLat=(destAirport.Latitude-originAirport.Latitude)*Math.PI/180;const dLon=(destAirport.Longitude-originAirport.Longitude)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1)*Math.cos(lat2)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return Math.round(R*c);}function calculatePrice(fromRegion,toRegion,totalDistance){const pricingRule=pricingChart.find(rule=>rule['From Region']===fromRegion&&rule['To Region']===toRegion&&totalDistance>=rule['Min Distance']&&totalDistance<=rule['Max Distance']);if(!pricingRule)return null;return{economy:pricingRule.Economy,premium:pricingRule['Premium Economy'],business:pricingRule.Business,first:pricingRule.First};}function formatPrice(miles){if(!miles)return'-';return miles.toLocaleString();}function formatPercentageDiff(percentageDiff,isDirect){if(isDirect)return'Direct';if(percentageDiff<1){return`+${percentageDiff.toFixed(2)}%`;}return`+${Math.round(percentageDiff)}%`;}function removeDuplicateRoutes(routes){const seen=new Set();return routes.filter(route=>{// Create a unique key for this route\nconst routeKey=route.map(segment=>`${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`).join('|');// If we've seen this route before, filter it out\nif(seen.has(routeKey)){return false;}// Otherwise, add it to seen routes and keep it\nseen.add(routeKey);return true;});}export function FlightResults(_ref){let{results,isVisible}=_ref;const[currentPage,setCurrentPage]=useState(1);const[sortConfig,setSortConfig]=useState({key:null,direction:'asc'});const[searchTerm,setSearchTerm]=useState('');const resultsPerPage=25;if(!isVisible||!results||results.length===0)return null;// Remove duplicates before any other processing\nconst uniqueResults=removeDuplicateRoutes(results);// Calculate direct distance\nconst directDistance=calculateDirectDistance(uniqueResults[0][0].Departure_IATA,uniqueResults[0][uniqueResults[0].length-1].Arrival_IATA);const getSortedResults=results=>{const sortedResults=[...results];if(sortConfig.key){sortedResults.sort((a,b)=>{let aValue,bValue;switch(sortConfig.key){case'stops':aValue=a.length-1;bValue=b.length-1;break;case'distance':aValue=a.reduce((sum,segment)=>sum+segment.Distance,0);bValue=b.reduce((sum,segment)=>sum+segment.Distance,0);break;case'economy':case'premium':case'business':case'first':const originAirportA=airports.find(airport=>airport.IATA===a[0].Departure_IATA);const destAirportA=airports.find(airport=>airport.IATA===a[a.length-1].Arrival_IATA);const totalDistanceA=a.reduce((sum,segment)=>sum+segment.Distance,0);const pricingA=calculatePrice(originAirportA.Zone,destAirportA.Zone,totalDistanceA);const originAirportB=airports.find(airport=>airport.IATA===b[0].Departure_IATA);const destAirportB=airports.find(airport=>airport.IATA===b[b.length-1].Arrival_IATA);const totalDistanceB=b.reduce((sum,segment)=>sum+segment.Distance,0);const pricingB=calculatePrice(originAirportB.Zone,destAirportB.Zone,totalDistanceB);aValue=(pricingA===null||pricingA===void 0?void 0:pricingA[sortConfig.key])||0;bValue=(pricingB===null||pricingB===void 0?void 0:pricingB[sortConfig.key])||0;break;case'departure':aValue=a[0].Departure_IATA;bValue=b[0].Departure_IATA;break;case'arrival':aValue=a[a.length-1].Arrival_IATA;bValue=b[b.length-1].Arrival_IATA;break;default:return 0;}if(aValue<bValue)return sortConfig.direction==='asc'?-1:1;if(aValue>bValue)return sortConfig.direction==='asc'?1:-1;return 0;});}return sortedResults;};const filterResults=results=>{if(!searchTerm)return results;const searchTerms=searchTerm.toUpperCase().trim().split(/\\s+/);return results.filter(itinerary=>{// Extract all airports in the route\nconst routeAirports=[...new Set([itinerary[0].Departure_IATA,...itinerary.map(segment=>segment.Arrival_IATA)])];// Check if all search terms exist in the route airports (any order)\nreturn searchTerms.every(term=>routeAirports.some(airport=>airport.includes(term)));});};// Apply filtering to unique results\nconst filteredResults=filterResults(uniqueResults);const sortedResults=getSortedResults(filteredResults);const totalPages=Math.ceil(sortedResults.length/resultsPerPage);const startIndex=(currentPage-1)*resultsPerPage;const endIndex=startIndex+resultsPerPage;const paginatedResults=sortedResults.slice(startIndex,endIndex);const handleSort=key=>{let direction='asc';if(sortConfig.key===key&&sortConfig.direction==='asc'){direction='desc';}setSortConfig({key,direction});setCurrentPage(1);};const getSortIcon=key=>{if(sortConfig.key!==key)return/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"});return sortConfig.direction==='asc'?/*#__PURE__*/_jsx(FaSortUp,{className:\"sort-icon active\"}):/*#__PURE__*/_jsx(FaSortDown,{className:\"sort-icon active\"});};const handleSearch=e=>{setSearchTerm(e.target.value);setCurrentPage(1);// Reset to first page when searching\n};const renderPagination=()=>{if(totalPages<=1)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(1),disabled:currentPage===1,className:\"pagination-first\",children:\"First\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.max(1,p-1)),disabled:currentPage===1,children:\"Previous\"}),/*#__PURE__*/_jsx(\"div\",{className:\"page-numbers\",children:Array.from({length:totalPages},(_,i)=>i+1).filter(pageNum=>pageNum===1||pageNum===totalPages||Math.abs(pageNum-currentPage)<=1).map((pageNum,idx,arr)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[idx>0&&arr[idx-1]!==pageNum-1&&/*#__PURE__*/_jsx(\"span\",{children:\"...\"}),/*#__PURE__*/_jsx(\"button\",{className:pageNum===currentPage?'active':'',onClick:()=>setCurrentPage(pageNum),children:pageNum})]},pageNum))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(p=>Math.min(totalPages,p+1)),disabled:currentPage===totalPages,children:\"Next\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(totalPages),disabled:currentPage===totalPages,className:\"pagination-last\",children:\"Last\"})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"results-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"direct-distance\",children:[\"Direct Distance: \",directDistance.toLocaleString(),\" miles\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-count\",children:[\"Showing \",startIndex+1,\"-\",Math.min(endIndex,sortedResults.length),\" of \",sortedResults.length,\" routes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-wrapper\",children:[/*#__PURE__*/_jsx(FaSearch,{className:\"search-icon\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search airports...\",value:searchTerm,onChange:handleSearch,className:\"search-input\"})]})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"flight-results\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('departure'),children:[\"From \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('arrival'),children:[\"To \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('stops'),children:[\"Stops \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsx(\"th\",{children:\"Layovers\"}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('distance'),children:[\"Distance \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('economy'),children:[\"Economy \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('business'),children:[\"Business \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]}),/*#__PURE__*/_jsxs(\"th\",{className:\"sortable\",onClick:()=>handleSort('first'),children:[\"First \",/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:paginatedResults.map((itinerary,index)=>{const numStops=itinerary.length-1;const layovers=itinerary.slice(0,-1).map(segment=>segment.Arrival_IATA).join(' â†’ ');const totalDistance=itinerary.reduce((sum,segment)=>sum+segment.Distance,0);const isDirect=itinerary.length===1;const percentageDiff=directDistance?(totalDistance/directDistance-1)*100:null;const formattedDiff=percentageDiff!==null?formatPercentageDiff(percentageDiff,isDirect):'-';const originAirport=airports.find(a=>a.IATA===itinerary[0].Departure_IATA);const destAirport=airports.find(a=>a.IATA===itinerary[itinerary.length-1].Arrival_IATA);const pricing=calculatePrice(originAirport.Zone,destAirport.Zone,totalDistance);return/*#__PURE__*/_jsxs(\"tr\",{className:isDirect?'direct-route':'',children:[/*#__PURE__*/_jsx(\"td\",{children:itinerary[0].Departure_IATA}),/*#__PURE__*/_jsx(\"td\",{children:itinerary[itinerary.length-1].Arrival_IATA}),/*#__PURE__*/_jsx(\"td\",{children:numStops}),/*#__PURE__*/_jsx(\"td\",{className:\"layovers\",children:layovers||'-'}),/*#__PURE__*/_jsx(\"td\",{children:formattedDiff}),/*#__PURE__*/_jsx(\"td\",{className:\"price-column\",children:formatPrice(pricing===null||pricing===void 0?void 0:pricing.economy)}),/*#__PURE__*/_jsx(\"td\",{className:\"price-column\",children:formatPrice(pricing===null||pricing===void 0?void 0:pricing.business)}),/*#__PURE__*/_jsx(\"td\",{className:\"price-column\",children:formatPrice(pricing===null||pricing===void 0?void 0:pricing.first)})]},startIndex+index);})})]}),renderPagination()]});}","map":{"version":3,"names":["React","useState","airports","pricingChart","FaSort","FaSortUp","FaSortDown","FaSearch","FaTimes","jsx","_jsx","jsxs","_jsxs","calculateDirectDistance","origin","destination","originAirport","find","a","IATA","destAirport","R","lat1","Latitude","Math","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","round","calculatePrice","fromRegion","toRegion","totalDistance","pricingRule","rule","economy","Economy","premium","business","Business","first","First","formatPrice","miles","toLocaleString","formatPercentageDiff","percentageDiff","isDirect","toFixed","removeDuplicateRoutes","routes","seen","Set","filter","route","routeKey","map","segment","Departure_IATA","Arrival_IATA","Distance","join","has","add","FlightResults","_ref","results","isVisible","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","resultsPerPage","length","uniqueResults","directDistance","getSortedResults","sortedResults","sort","b","aValue","bValue","reduce","sum","originAirportA","airport","destAirportA","totalDistanceA","pricingA","Zone","originAirportB","destAirportB","totalDistanceB","pricingB","filterResults","searchTerms","toUpperCase","trim","split","itinerary","routeAirports","every","term","some","includes","filteredResults","totalPages","ceil","startIndex","endIndex","paginatedResults","slice","handleSort","getSortIcon","className","handleSearch","e","target","value","renderPagination","children","onClick","disabled","p","max","Array","from","_","i","pageNum","abs","idx","arr","Fragment","min","type","placeholder","onChange","index","numStops","layovers","formattedDiff","pricing"],"sources":["/Users/hanguyen/Route builder/RouteBuilder/src/components/FlightResults.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch, FaTimes } from 'react-icons/fa';\n\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  \n  if (!originAirport || !destAirport) return null;\n\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(dLon/2) * Math.sin(dLon/2);\n  \n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return Math.round(R * c);\n}\n\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => \n    rule['From Region'] === fromRegion &&\n    rule['To Region'] === toRegion &&\n    totalDistance >= rule['Min Distance'] &&\n    totalDistance <= rule['Max Distance']\n  );\n\n  if (!pricingRule) return null;\n\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\n\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\n\nfunction formatPercentageDiff(percentageDiff, isDirect) {\n  if (isDirect) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\n\nfunction removeDuplicateRoutes(routes) {\n  const seen = new Set();\n  \n  return routes.filter(route => {\n    // Create a unique key for this route\n    const routeKey = route.map(segment => \n      `${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`\n    ).join('|');\n    \n    // If we've seen this route before, filter it out\n    if (seen.has(routeKey)) {\n      return false;\n    }\n    \n    // Otherwise, add it to seen routes and keep it\n    seen.add(routeKey);\n    return true;\n  });\n}\n\nexport function FlightResults({ results, isVisible }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Remove duplicates before any other processing\n  const uniqueResults = removeDuplicateRoutes(results);\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(\n    uniqueResults[0][0].Departure_IATA,\n    uniqueResults[0][uniqueResults[0].length - 1].Arrival_IATA\n  );\n\n  const getSortedResults = (results) => {\n    const sortedResults = [...results];\n    \n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        \n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            \n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            \n            aValue = pricingA?.[sortConfig.key] || 0;\n            bValue = pricingB?.[sortConfig.key] || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n\n    return sortedResults;\n  };\n\n  const filterResults = (results) => {\n    if (!searchTerm) return results;\n    \n    const searchTerms = searchTerm.toUpperCase().trim().split(/\\s+/);\n    \n    return results.filter(itinerary => {\n      // Extract all airports in the route\n      const routeAirports = [\n        ...new Set([\n          itinerary[0].Departure_IATA,\n          ...itinerary.map(segment => segment.Arrival_IATA)\n        ])\n      ];\n      \n      // Check if all search terms exist in the route airports (any order)\n      return searchTerms.every(term => \n        routeAirports.some(airport => airport.includes(term))\n      );\n    });\n  };\n\n  // Apply filtering to unique results\n  const filteredResults = filterResults(uniqueResults);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n\n  const handleSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n    setCurrentPage(1);\n  };\n\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) return <FaSort className=\"sort-icon\" />;\n    return sortConfig.direction === 'asc' ? \n      <FaSortUp className=\"sort-icon active\" /> : \n      <FaSortDown className=\"sort-icon active\" />;\n  };\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n\n    return (\n      <div className=\"pagination\">\n        <button \n          onClick={() => setCurrentPage(1)}\n          disabled={currentPage === 1}\n          className=\"pagination-first\"\n        >\n          First\n        </button>\n        <button \n          onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        \n        <div className=\"page-numbers\">\n          {Array.from({ length: totalPages }, (_, i) => i + 1)\n            .filter(pageNum => \n              pageNum === 1 || \n              pageNum === totalPages || \n              Math.abs(pageNum - currentPage) <= 1\n            )\n            .map((pageNum, idx, arr) => (\n              <React.Fragment key={pageNum}>\n                {idx > 0 && arr[idx - 1] !== pageNum - 1 && <span>...</span>}\n                <button\n                  className={pageNum === currentPage ? 'active' : ''}\n                  onClick={() => setCurrentPage(pageNum)}\n                >\n                  {pageNum}\n                </button>\n              </React.Fragment>\n            ))}\n        </div>\n\n        <button \n          onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n          disabled={currentPage === totalPages}\n        >\n          Next\n        </button>\n        <button \n          onClick={() => setCurrentPage(totalPages)}\n          disabled={currentPage === totalPages}\n          className=\"pagination-last\"\n        >\n          Last\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-header\">\n        <div className=\"header-left\">\n          <div className=\"direct-distance\">\n            Direct Distance: {directDistance.toLocaleString()} miles\n          </div>\n          <div className=\"results-count\">\n            Showing {startIndex + 1}-{Math.min(endIndex, sortedResults.length)} of {sortedResults.length} routes\n          </div>\n        </div>\n        <div className=\"search-wrapper\">\n          <FaSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search airports...\"\n            value={searchTerm}\n            onChange={handleSearch}\n            className=\"search-input\"\n          />\n        </div>\n      </div>\n\n      <table className=\"flight-results\">\n        <thead>\n          <tr>\n            <th className=\"sortable\" onClick={() => handleSort('departure')}>\n              From <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('arrival')}>\n              To <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('stops')}>\n              Stops <FaSort className=\"sort-icon\" />\n            </th>\n            <th>Layovers</th>\n            <th className=\"sortable\" onClick={() => handleSort('distance')}>\n              Distance <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('economy')}>\n              Economy <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('business')}>\n              Business <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('first')}>\n              First <FaSort className=\"sort-icon\" />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedResults.map((itinerary, index) => {\n            const numStops = itinerary.length - 1;\n            const layovers = itinerary\n              .slice(0, -1)\n              .map((segment) => segment.Arrival_IATA)\n              .join(' â†’ ');\n            \n            const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n            const isDirect = itinerary.length === 1;\n            const percentageDiff = directDistance \n              ? ((totalDistance / directDistance) - 1) * 100 \n              : null;\n\n            const formattedDiff = percentageDiff !== null \n              ? formatPercentageDiff(percentageDiff, isDirect)\n              : '-';\n\n            const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n            const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n            \n            const pricing = calculatePrice(\n              originAirport.Zone,\n              destAirport.Zone,\n              totalDistance\n            );\n\n            return (\n              <tr key={startIndex + index} className={isDirect ? 'direct-route' : ''}>\n                <td>{itinerary[0].Departure_IATA}</td>\n                <td>{itinerary[itinerary.length - 1].Arrival_IATA}</td>\n                <td>{numStops}</td>\n                <td className=\"layovers\">{layovers || '-'}</td>\n                <td>{formattedDiff}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.economy)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.business)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.first)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {renderPagination()}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}