{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Route builder/RouteBuilder/src/components/FlightResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  if (!originAirport || !destAirport) return null;\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return Math.round(R * c);\n}\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => rule['From Region'] === fromRegion && rule['To Region'] === toRegion && totalDistance >= rule['Min Distance'] && totalDistance <= rule['Max Distance']);\n  if (!pricingRule) return null;\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\nfunction formatPercentageDiff(percentageDiff) {\n  if (percentageDiff === 0) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\nexport function FlightResults({\n  results,\n  isVisible\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(results[0][0].Departure_IATA, results[0][results[0].length - 1].Arrival_IATA);\n  const getSortedResults = results => {\n    const sortedResults = [...results];\n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            aValue = (pricingA === null || pricingA === void 0 ? void 0 : pricingA[sortConfig.key]) || 0;\n            bValue = (pricingB === null || pricingB === void 0 ? void 0 : pricingB[sortConfig.key]) || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n    return sortedResults;\n  };\n  const filterResults = results => {\n    if (!searchTerm) return results;\n    const searchLower = searchTerm.toLowerCase();\n    return results.filter(itinerary => {\n      // Search in departure and arrival\n      const departure = itinerary[0].Departure_IATA.toLowerCase();\n      const arrival = itinerary[itinerary.length - 1].Arrival_IATA.toLowerCase();\n\n      // Search in layovers\n      const layovers = itinerary.slice(0, -1).map(segment => segment.Arrival_IATA.toLowerCase()).join(' ');\n      return departure.includes(searchLower) || arrival.includes(searchLower) || layovers.includes(searchLower);\n    });\n  };\n\n  // Apply filtering before sorting\n  const filteredResults = filterResults(results);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    setCurrentPage(1);\n  };\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) return /*#__PURE__*/_jsxDEV(FaSort, {\n      className: \"sort-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 40\n    }, this);\n    return sortConfig.direction === 'asc' ? /*#__PURE__*/_jsxDEV(FaSortUp, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(FaSortDown, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        className: \"pagination-first\",\n        children: \"First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).filter(pageNum => pageNum === 1 || pageNum === totalPages || Math.abs(pageNum - currentPage) <= 1).map((pageNum, idx, arr) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [idx > 0 && arr[idx - 1] !== pageNum - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: pageNum === currentPage ? 'active' : '',\n            onClick: () => setCurrentPage(pageNum),\n            children: pageNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)]\n        }, pageNum, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages,\n        className: \"pagination-last\",\n        children: \"Last\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"direct-distance\",\n          children: [\"Direct Distance: \", directDistance.toLocaleString(), \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [\"Showing \", startIndex + 1, \"-\", Math.min(endIndex, sortedResults.length), \" of \", sortedResults.length, \" routes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search airports...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-search\",\n          onClick: () => {\n            setSearchTerm('');\n            setCurrentPage(1);\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('departure'),\n            className: \"sortable\",\n            children: [\"Departure \", getSortIcon('departure')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('arrival'),\n            className: \"sortable\",\n            children: [\"Arrival \", getSortIcon('arrival')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('stops'),\n            className: \"sortable\",\n            children: [\"# of Stops \", getSortIcon('stops')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Layovers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('distance'),\n            className: \"sortable\",\n            children: [\"Distance Difference \", getSortIcon('distance')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('economy'),\n            className: \"price-column sortable\",\n            children: [\"Economy \", getSortIcon('economy')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('premium'),\n            className: \"price-column sortable\",\n            children: [\"Premium \", getSortIcon('premium')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('business'),\n            className: \"price-column sortable\",\n            children: [\"Business \", getSortIcon('business')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('first'),\n            className: \"price-column sortable\",\n            children: [\"First \", getSortIcon('first')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedResults.map((itinerary, index) => {\n          const numStops = itinerary.length - 1;\n          const layovers = itinerary.slice(0, -1).map(segment => segment.Arrival_IATA).join(' → ');\n          const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n          const percentageDiff = directDistance ? (totalDistance / directDistance - 1) * 100 : null;\n          const formattedDiff = percentageDiff !== null ? formatPercentageDiff(percentageDiff) : '-';\n          const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n          const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n          const pricing = calculatePrice(originAirport.Zone, destAirport.Zone, totalDistance);\n          const isDirect = itinerary.length === 1;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: isDirect ? 'direct-route' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[0].Departure_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[itinerary.length - 1].Arrival_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: numStops\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"layovers\",\n              children: layovers || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formattedDiff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.economy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.premium)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.business)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.first)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, startIndex + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), renderPagination()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(FlightResults, \"WgmTMnb8WayQzfU7xcW4R6u1YwA=\");\n_c = FlightResults;\nvar _c;\n$RefreshReg$(_c, \"FlightResults\");","map":{"version":3,"names":["React","useState","airports","pricingChart","FaSort","FaSortUp","FaSortDown","FaSearch","jsxDEV","_jsxDEV","calculateDirectDistance","origin","destination","originAirport","find","a","IATA","destAirport","R","lat1","Latitude","Math","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","round","calculatePrice","fromRegion","toRegion","totalDistance","pricingRule","rule","economy","Economy","premium","business","Business","first","First","formatPrice","miles","toLocaleString","formatPercentageDiff","percentageDiff","toFixed","FlightResults","results","isVisible","_s","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","resultsPerPage","length","directDistance","Departure_IATA","Arrival_IATA","getSortedResults","sortedResults","sort","b","aValue","bValue","reduce","sum","segment","Distance","originAirportA","airport","destAirportA","totalDistanceA","pricingA","Zone","originAirportB","destAirportB","totalDistanceB","pricingB","filterResults","searchLower","toLowerCase","filter","itinerary","departure","arrival","layovers","slice","map","join","includes","filteredResults","totalPages","ceil","startIndex","endIndex","paginatedResults","handleSort","getSortIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","e","target","value","renderPagination","children","onClick","disabled","p","max","Array","from","_","i","pageNum","abs","idx","arr","Fragment","min","type","placeholder","onChange","index","numStops","formattedDiff","pricing","isDirect","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Route builder/RouteBuilder/src/components/FlightResults.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch } from 'react-icons/fa';\n\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  \n  if (!originAirport || !destAirport) return null;\n\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(dLon/2) * Math.sin(dLon/2);\n  \n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return Math.round(R * c);\n}\n\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => \n    rule['From Region'] === fromRegion &&\n    rule['To Region'] === toRegion &&\n    totalDistance >= rule['Min Distance'] &&\n    totalDistance <= rule['Max Distance']\n  );\n\n  if (!pricingRule) return null;\n\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\n\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\n\nfunction formatPercentageDiff(percentageDiff) {\n  if (percentageDiff === 0) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\n\nexport function FlightResults({ results, isVisible }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(\n    results[0][0].Departure_IATA,\n    results[0][results[0].length - 1].Arrival_IATA\n  );\n\n  const getSortedResults = (results) => {\n    const sortedResults = [...results];\n    \n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        \n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            \n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            \n            aValue = pricingA?.[sortConfig.key] || 0;\n            bValue = pricingB?.[sortConfig.key] || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n\n    return sortedResults;\n  };\n\n  const filterResults = (results) => {\n    if (!searchTerm) return results;\n    \n    const searchLower = searchTerm.toLowerCase();\n    return results.filter(itinerary => {\n      // Search in departure and arrival\n      const departure = itinerary[0].Departure_IATA.toLowerCase();\n      const arrival = itinerary[itinerary.length - 1].Arrival_IATA.toLowerCase();\n      \n      // Search in layovers\n      const layovers = itinerary\n        .slice(0, -1)\n        .map(segment => segment.Arrival_IATA.toLowerCase())\n        .join(' ');\n\n      return departure.includes(searchLower) ||\n             arrival.includes(searchLower) ||\n             layovers.includes(searchLower);\n    });\n  };\n\n  // Apply filtering before sorting\n  const filteredResults = filterResults(results);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n\n  const handleSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n    setCurrentPage(1);\n  };\n\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) return <FaSort className=\"sort-icon\" />;\n    return sortConfig.direction === 'asc' ? \n      <FaSortUp className=\"sort-icon active\" /> : \n      <FaSortDown className=\"sort-icon active\" />;\n  };\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n\n    return (\n      <div className=\"pagination\">\n        <button \n          onClick={() => setCurrentPage(1)}\n          disabled={currentPage === 1}\n          className=\"pagination-first\"\n        >\n          First\n        </button>\n        <button \n          onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        \n        <div className=\"page-numbers\">\n          {Array.from({ length: totalPages }, (_, i) => i + 1)\n            .filter(pageNum => \n              pageNum === 1 || \n              pageNum === totalPages || \n              Math.abs(pageNum - currentPage) <= 1\n            )\n            .map((pageNum, idx, arr) => (\n              <React.Fragment key={pageNum}>\n                {idx > 0 && arr[idx - 1] !== pageNum - 1 && <span>...</span>}\n                <button\n                  className={pageNum === currentPage ? 'active' : ''}\n                  onClick={() => setCurrentPage(pageNum)}\n                >\n                  {pageNum}\n                </button>\n              </React.Fragment>\n            ))}\n        </div>\n\n        <button \n          onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n          disabled={currentPage === totalPages}\n        >\n          Next\n        </button>\n        <button \n          onClick={() => setCurrentPage(totalPages)}\n          disabled={currentPage === totalPages}\n          className=\"pagination-last\"\n        >\n          Last\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-header\">\n        <div className=\"header-left\">\n          <div className=\"direct-distance\">\n            Direct Distance: {directDistance.toLocaleString()} miles\n          </div>\n          <div className=\"results-count\">\n            Showing {startIndex + 1}-{Math.min(endIndex, sortedResults.length)} of {sortedResults.length} routes\n          </div>\n        </div>\n        <div className=\"search-wrapper\">\n          <FaSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search airports...\"\n            value={searchTerm}\n            onChange={handleSearch}\n            className=\"search-input\"\n          />\n          {searchTerm && (\n            <button \n              className=\"clear-search\"\n              onClick={() => {\n                setSearchTerm('');\n                setCurrentPage(1);\n              }}\n            >\n              ×\n            </button>\n          )}\n        </div>\n      </div>\n\n      <table className=\"flight-results\">\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('departure')} className=\"sortable\">\n              Departure {getSortIcon('departure')}\n            </th>\n            <th onClick={() => handleSort('arrival')} className=\"sortable\">\n              Arrival {getSortIcon('arrival')}\n            </th>\n            <th onClick={() => handleSort('stops')} className=\"sortable\">\n              # of Stops {getSortIcon('stops')}\n            </th>\n            <th>Layovers</th>\n            <th onClick={() => handleSort('distance')} className=\"sortable\">\n              Distance Difference {getSortIcon('distance')}\n            </th>\n            <th onClick={() => handleSort('economy')} className=\"price-column sortable\">\n              Economy {getSortIcon('economy')}\n            </th>\n            <th onClick={() => handleSort('premium')} className=\"price-column sortable\">\n              Premium {getSortIcon('premium')}\n            </th>\n            <th onClick={() => handleSort('business')} className=\"price-column sortable\">\n              Business {getSortIcon('business')}\n            </th>\n            <th onClick={() => handleSort('first')} className=\"price-column sortable\">\n              First {getSortIcon('first')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedResults.map((itinerary, index) => {\n            const numStops = itinerary.length - 1;\n            const layovers = itinerary\n              .slice(0, -1)\n              .map((segment) => segment.Arrival_IATA)\n              .join(' → ');\n            \n            const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n            const percentageDiff = directDistance \n              ? ((totalDistance / directDistance) - 1) * 100 \n              : null;\n\n            const formattedDiff = percentageDiff !== null \n              ? formatPercentageDiff(percentageDiff)\n              : '-';\n\n            const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n            const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n            \n            const pricing = calculatePrice(\n              originAirport.Zone,\n              destAirport.Zone,\n              totalDistance\n            );\n\n            const isDirect = itinerary.length === 1;\n\n            return (\n              <tr key={startIndex + index} className={isDirect ? 'direct-route' : ''}>\n                <td>{itinerary[0].Departure_IATA}</td>\n                <td>{itinerary[itinerary.length - 1].Arrival_IATA}</td>\n                <td>{numStops}</td>\n                <td className=\"layovers\">{layovers || '-'}</td>\n                <td>{formattedDiff}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.economy)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.premium)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.business)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.first)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {renderPagination()}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}