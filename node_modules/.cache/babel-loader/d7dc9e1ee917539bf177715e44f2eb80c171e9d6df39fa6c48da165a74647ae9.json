{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Documents/git/routebuilder/src/components/AirportSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { airports } from '../data/airports';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AirportSearch({\n  label,\n  value,\n  onChange\n}) {\n  _s();\n  // State for search suggestions and input field\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Handles input changes and filters airport suggestions\n  // Prioritizes IATA code matches over airport name matches\n  // Limited to 5 suggestions maximum\n  const handleInputChange = e => {\n    const input = e.target.value;\n    setInputValue(input);\n    if (input.length > 1) {\n      // First find IATA matches\n      const iataMatches = airports.filter(airport => airport.IATA.toLowerCase().includes(input.toLowerCase()));\n\n      // Then find name matches, excluding airports already matched by IATA\n      const nameMatches = airports.filter(airport => !iataMatches.includes(airport) && airport.Name.toLowerCase().includes(input.toLowerCase()));\n\n      // Combine the results, IATA matches first\n      const filtered = [...iataMatches, ...nameMatches].slice(0, 5);\n      setSuggestions(filtered);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"airport-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: `Enter ${label} airport`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions\",\n      children: suggestions.map(airport => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          onChange(airport.IATA);\n          setInputValue(airport.IATA);\n          setSuggestions([]);\n        },\n        children: [airport.IATA, \" - \", airport.Name, \" (\", airport.Country, \")\"]\n      }, airport.IATA, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AirportSearch, \"OMIk65ZnoUS1Z6cCYjiknxtR2BQ=\");\n_c = AirportSearch;\nvar _c;\n$RefreshReg$(_c, \"AirportSearch\");","map":{"version":3,"names":["React","useState","airports","jsxDEV","_jsxDEV","AirportSearch","label","value","onChange","_s","suggestions","setSuggestions","inputValue","setInputValue","handleInputChange","e","input","target","length","iataMatches","filter","airport","IATA","toLowerCase","includes","nameMatches","Name","filtered","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","onClick","Country","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Documents/git/routebuilder/src/components/AirportSearch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { airports } from '../data/airports';\n\nexport function AirportSearch({ label, value, onChange }) {\n  // State for search suggestions and input field\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Handles input changes and filters airport suggestions\n  // Prioritizes IATA code matches over airport name matches\n  // Limited to 5 suggestions maximum\n  const handleInputChange = (e) => {\n    const input = e.target.value;\n    setInputValue(input);\n    \n    if (input.length > 1) {\n      // First find IATA matches\n      const iataMatches = airports.filter(airport => \n        airport.IATA.toLowerCase().includes(input.toLowerCase())\n      );\n      \n      // Then find name matches, excluding airports already matched by IATA\n      const nameMatches = airports.filter(airport => \n        !iataMatches.includes(airport) && \n        airport.Name.toLowerCase().includes(input.toLowerCase())\n      );\n      \n      // Combine the results, IATA matches first\n      const filtered = [...iataMatches, ...nameMatches].slice(0, 5);\n      setSuggestions(filtered);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  return (\n    <div className=\"airport-search\">\n      <label>{label}</label>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={`Enter ${label} airport`}\n      />\n      {suggestions.length > 0 && (\n        <ul className=\"suggestions\">\n          {suggestions.map(airport => (\n            <li \n              key={airport.IATA}\n              onClick={() => {\n                onChange(airport.IATA);\n                setInputValue(airport.IATA);\n                setSuggestions([]);\n              }}\n            >\n              {airport.IATA} - {airport.Name} ({airport.Country})\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}