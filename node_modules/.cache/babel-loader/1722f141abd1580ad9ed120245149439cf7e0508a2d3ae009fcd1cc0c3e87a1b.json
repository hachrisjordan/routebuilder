{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Route builder/RouteBuilder/src/components/FlightResults.js\";\nimport React from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  if (!originAirport || !destAirport) return null;\n\n  // Calculate great circle distance using Haversine formula\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nexport function FlightResults({\n  results,\n  isVisible\n}) {\n  if (!isVisible || !results || results.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"# of Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Layovers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Distance Difference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Economy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Premium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((itinerary, index) => {\n          const numStops = itinerary.length - 1;\n          const layovers = itinerary.slice(0, -1).map((segment, idx) => segment.Arrival_IATA).join(' → ');\n\n          // Calculate total itinerary distance\n          const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n\n          // Calculate direct distance\n          const directDistance = calculateDirectDistance(itinerary[0].Departure_IATA, itinerary[itinerary.length - 1].Arrival_IATA);\n\n          // Calculate percentage difference\n          const percentageDiff = directDistance ? Math.round((totalDistance / directDistance - 1) * 100) : null;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[0].Departure_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[itinerary.length - 1].Arrival_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: numStops\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"layovers\",\n              children: layovers || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: percentageDiff ? `+${percentageDiff}%` : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = FlightResults;\nvar _c;\n$RefreshReg$(_c, \"FlightResults\");","map":{"version":3,"names":["React","airports","jsxDEV","_jsxDEV","calculateDirectDistance","origin","destination","originAirport","find","a","IATA","destAirport","R","lat1","Latitude","Math","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","FlightResults","results","isVisible","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","itinerary","index","numStops","layovers","slice","segment","idx","Arrival_IATA","join","totalDistance","reduce","sum","Distance","directDistance","Departure_IATA","percentageDiff","round","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Route builder/RouteBuilder/src/components/FlightResults.js"],"sourcesContent":["import React from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\n\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  \n  if (!originAirport || !destAirport) return null;\n\n  // Calculate great circle distance using Haversine formula\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(dLon/2) * Math.sin(dLon/2);\n  \n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nexport function FlightResults({ results, isVisible }) {\n  if (!isVisible || !results || results.length === 0) return null;\n\n  return (\n    <div className=\"results-container\">\n      <table className=\"flight-results\">\n        <thead>\n          <tr>\n            <th>Departure</th>\n            <th>Arrival</th>\n            <th># of Stops</th>\n            <th>Layovers</th>\n            <th>Distance Difference</th>\n            <th>Economy</th>\n            <th>Premium</th>\n            <th>Business</th>\n            <th>First</th>\n          </tr>\n        </thead>\n        <tbody>\n          {results.map((itinerary, index) => {\n            const numStops = itinerary.length - 1;\n            const layovers = itinerary\n              .slice(0, -1)\n              .map((segment, idx) => segment.Arrival_IATA)\n              .join(' → ');\n            \n            // Calculate total itinerary distance\n            const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n            \n            // Calculate direct distance\n            const directDistance = calculateDirectDistance(\n              itinerary[0].Departure_IATA,\n              itinerary[itinerary.length - 1].Arrival_IATA\n            );\n            \n            // Calculate percentage difference\n            const percentageDiff = directDistance \n              ? Math.round(((totalDistance / directDistance) - 1) * 100) \n              : null;\n\n            return (\n              <tr key={index}>\n                <td>{itinerary[0].Departure_IATA}</td>\n                <td>{itinerary[itinerary.length - 1].Arrival_IATA}</td>\n                <td>{numStops}</td>\n                <td className=\"layovers\">{layovers || '-'}</td>\n                <td>{percentageDiff ? `+${percentageDiff}%` : '-'}</td>\n                <td>-</td>\n                <td>-</td>\n                <td>-</td>\n                <td>-</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}