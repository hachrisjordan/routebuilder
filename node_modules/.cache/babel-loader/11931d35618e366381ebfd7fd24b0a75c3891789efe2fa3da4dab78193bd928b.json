{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguyen77\\\\Documents\\\\GitHub\\\\routebuilder\\\\src\\\\components\\\\FlightResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch, FaTimes } from 'react-icons/fa';\n\n// Helper Functions\n// Calculates the direct \"as the crow flies\" distance between two airports using the Haversine formula\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  if (!originAirport || !destAirport) return null;\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return Math.round(R * c);\n}\n\n// Looks up the award pricing based on regions and distance from the pricing chart\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => rule['From Region'] === fromRegion && rule['To Region'] === toRegion && totalDistance >= rule['Min Distance'] && totalDistance <= rule['Max Distance']);\n  if (!pricingRule) return null;\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\n\n// Formats mile amounts with thousands separators\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\n\n// Formats the percentage difference from direct distance, showing \"Direct\" for non-stop flights\nfunction formatPercentageDiff(percentageDiff, isDirect) {\n  if (isDirect) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\n\n// Removes duplicate routes and sorts by layovers then distance\nfunction removeDuplicateRoutes(routes) {\n  const seen = new Set();\n  return routes.filter(route => {\n    // Create a unique key for this route\n    const routeKey = route.map(segment => `${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`).join('|');\n\n    // If we've seen this route before, filter it out\n    if (seen.has(routeKey)) {\n      return false;\n    }\n\n    // Otherwise, add it to seen routes and keep it\n    seen.add(routeKey);\n    return true;\n  }).sort((a, b) => {\n    // First sort by number of layovers (segments - 1)\n    const layoversA = a.length - 1;\n    const layoversB = b.length - 1;\n    if (layoversA !== layoversB) {\n      return layoversA - layoversB;\n    }\n\n    // If same number of layovers, sort by total distance\n    const distanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n    const distanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n    return distanceA - distanceB;\n  });\n}\n\n// Main Component\nexport function FlightResults({\n  results,\n  isVisible\n}) {\n  _s();\n  // State for pagination, sorting and search filtering\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Remove duplicates before any other processing\n  const uniqueResults = removeDuplicateRoutes(results);\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(uniqueResults[0][0].Departure_IATA, uniqueResults[0][uniqueResults[0].length - 1].Arrival_IATA);\n\n  // Helper function to sort results based on different criteria (stops, distance, cabin class prices)\n  const getSortedResults = results => {\n    const sortedResults = [...results];\n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            aValue = (pricingA === null || pricingA === void 0 ? void 0 : pricingA[sortConfig.key]) || 0;\n            bValue = (pricingB === null || pricingB === void 0 ? void 0 : pricingB[sortConfig.key]) || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n    return sortedResults;\n  };\n\n  // Filters results based on search terms matching airport codes\n  const filterResults = results => {\n    if (!searchTerm) return results;\n    const searchTerms = searchTerm.toUpperCase().trim().split(/\\s+/);\n    return results.filter(itinerary => {\n      // Extract all airports in the route\n      const routeAirports = [...new Set([itinerary[0].Departure_IATA, ...itinerary.map(segment => segment.Arrival_IATA)])];\n\n      // Check if all search terms exist in the route airports (any order)\n      return searchTerms.every(term => routeAirports.some(airport => airport.includes(term)));\n    });\n  };\n\n  // Apply filtering to unique results\n  const filteredResults = filterResults(uniqueResults);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    setCurrentPage(1);\n  };\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) return /*#__PURE__*/_jsxDEV(FaSort, {\n      className: \"sort-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 40\n    }, this);\n    return sortConfig.direction === 'asc' ? /*#__PURE__*/_jsxDEV(FaSortUp, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(FaSortDown, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n\n  // Renders pagination controls with ellipsis for large page counts\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        className: \"pagination-first\",\n        children: \"First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).filter(pageNum => pageNum === 1 || pageNum === totalPages || Math.abs(pageNum - currentPage) <= 1).map((pageNum, idx, arr) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [idx > 0 && arr[idx - 1] !== pageNum - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: pageNum === currentPage ? 'active' : '',\n            onClick: () => setCurrentPage(pageNum),\n            children: pageNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)]\n        }, pageNum, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages,\n        className: \"pagination-last\",\n        children: \"Last\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"direct-distance\",\n          children: [\"Direct Distance: \", directDistance.toLocaleString(), \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [\"Showing \", startIndex + 1, \"-\", Math.min(endIndex, sortedResults.length), \" of \", sortedResults.length, \" routes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search airports...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('departure'),\n            children: [\"From \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('arrival'),\n            children: [\"To \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('stops'),\n            children: [\"Stops \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Layovers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('distance'),\n            children: [\"Distance \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('economy'),\n            children: [\"Economy \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('business'),\n            children: [\"Business \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('first'),\n            children: [\"First \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedResults.map((itinerary, index) => {\n          const numStops = itinerary.length - 1;\n          const layovers = itinerary.slice(0, -1).map(segment => segment.Arrival_IATA).join(' → ');\n          const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n          const isDirect = itinerary.length === 1;\n          const percentageDiff = directDistance ? (totalDistance / directDistance - 1) * 100 : null;\n          const formattedDiff = percentageDiff !== null ? formatPercentageDiff(percentageDiff, isDirect) : '-';\n          const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n          const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n          const pricing = calculatePrice(originAirport.Zone, destAirport.Zone, totalDistance);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: isDirect ? 'direct-route' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[0].Departure_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[itinerary.length - 1].Arrival_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: numStops\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"layovers\",\n              children: layovers || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formattedDiff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.economy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.business)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.first)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, startIndex + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), renderPagination()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(FlightResults, \"oWATgSYs5q6Eb3i4COfdzjVyoOk=\");\n_c = FlightResults;\nvar _c;\n$RefreshReg$(_c, \"FlightResults\");","map":{"version":3,"names":["React","useState","airports","pricingChart","FaSort","FaSortUp","FaSortDown","FaSearch","FaTimes","jsxDEV","_jsxDEV","calculateDirectDistance","origin","destination","originAirport","find","a","IATA","destAirport","R","lat1","Latitude","Math","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","round","calculatePrice","fromRegion","toRegion","totalDistance","pricingRule","rule","economy","Economy","premium","business","Business","first","First","formatPrice","miles","toLocaleString","formatPercentageDiff","percentageDiff","isDirect","toFixed","removeDuplicateRoutes","routes","seen","Set","filter","route","routeKey","map","segment","Departure_IATA","Arrival_IATA","Distance","join","has","add","sort","b","layoversA","length","layoversB","distanceA","reduce","sum","distanceB","FlightResults","results","isVisible","_s","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","resultsPerPage","uniqueResults","directDistance","getSortedResults","sortedResults","aValue","bValue","originAirportA","airport","destAirportA","totalDistanceA","pricingA","Zone","originAirportB","destAirportB","totalDistanceB","pricingB","filterResults","searchTerms","toUpperCase","trim","split","itinerary","routeAirports","every","term","some","includes","filteredResults","totalPages","ceil","startIndex","endIndex","paginatedResults","slice","handleSort","getSortIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","e","target","value","renderPagination","children","onClick","disabled","p","max","Array","from","_","i","pageNum","abs","idx","arr","Fragment","min","type","placeholder","onChange","index","numStops","layovers","formattedDiff","pricing","_c","$RefreshReg$"],"sources":["C:/Users/nguyen77/Documents/GitHub/routebuilder/src/components/FlightResults.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './FlightResults.css';\r\nimport { airports } from '../data/airports';\r\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\r\nimport { FaSort, FaSortUp, FaSortDown, FaSearch, FaTimes } from 'react-icons/fa';\r\n\r\n// Helper Functions\r\n// Calculates the direct \"as the crow flies\" distance between two airports using the Haversine formula\r\nfunction calculateDirectDistance(origin, destination) {\r\n  const originAirport = airports.find(a => a.IATA === origin);\r\n  const destAirport = airports.find(a => a.IATA === destination);\r\n  \r\n  if (!originAirport || !destAirport) return null;\r\n\r\n  const R = 3959; // Earth's radius in miles\r\n  const lat1 = originAirport.Latitude * Math.PI / 180;\r\n  const lat2 = destAirport.Latitude * Math.PI / 180;\r\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\r\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\r\n\r\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n           Math.cos(lat1) * Math.cos(lat2) *\r\n           Math.sin(dLon/2) * Math.sin(dLon/2);\r\n  \r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return Math.round(R * c);\r\n}\r\n\r\n// Looks up the award pricing based on regions and distance from the pricing chart\r\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\r\n  const pricingRule = pricingChart.find(rule => \r\n    rule['From Region'] === fromRegion &&\r\n    rule['To Region'] === toRegion &&\r\n    totalDistance >= rule['Min Distance'] &&\r\n    totalDistance <= rule['Max Distance']\r\n  );\r\n\r\n  if (!pricingRule) return null;\r\n\r\n  return {\r\n    economy: pricingRule.Economy,\r\n    premium: pricingRule['Premium Economy'],\r\n    business: pricingRule.Business,\r\n    first: pricingRule.First\r\n  };\r\n}\r\n\r\n// Formats mile amounts with thousands separators\r\nfunction formatPrice(miles) {\r\n  if (!miles) return '-';\r\n  return miles.toLocaleString();\r\n}\r\n\r\n// Formats the percentage difference from direct distance, showing \"Direct\" for non-stop flights\r\nfunction formatPercentageDiff(percentageDiff, isDirect) {\r\n  if (isDirect) return 'Direct';\r\n  if (percentageDiff < 1) {\r\n    return `+${percentageDiff.toFixed(2)}%`;\r\n  }\r\n  return `+${Math.round(percentageDiff)}%`;\r\n}\r\n\r\n// Removes duplicate routes and sorts by layovers then distance\r\nfunction removeDuplicateRoutes(routes) {\r\n  const seen = new Set();\r\n  \r\n  return routes\r\n    .filter(route => {\r\n      // Create a unique key for this route\r\n      const routeKey = route.map(segment => \r\n        `${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`\r\n      ).join('|');\r\n      \r\n      // If we've seen this route before, filter it out\r\n      if (seen.has(routeKey)) {\r\n        return false;\r\n      }\r\n      \r\n      // Otherwise, add it to seen routes and keep it\r\n      seen.add(routeKey);\r\n      return true;\r\n    })\r\n    .sort((a, b) => {\r\n      // First sort by number of layovers (segments - 1)\r\n      const layoversA = a.length - 1;\r\n      const layoversB = b.length - 1;\r\n      if (layoversA !== layoversB) {\r\n        return layoversA - layoversB;\r\n      }\r\n      \r\n      // If same number of layovers, sort by total distance\r\n      const distanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\r\n      const distanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\r\n      return distanceA - distanceB;\r\n    });\r\n}\r\n\r\n// Main Component\r\nexport function FlightResults({ results, isVisible }) {\r\n  // State for pagination, sorting and search filtering\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: null,\r\n    direction: 'asc'\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const resultsPerPage = 25;\r\n\r\n  if (!isVisible || !results || results.length === 0) return null;\r\n\r\n  // Remove duplicates before any other processing\r\n  const uniqueResults = removeDuplicateRoutes(results);\r\n\r\n  // Calculate direct distance\r\n  const directDistance = calculateDirectDistance(\r\n    uniqueResults[0][0].Departure_IATA,\r\n    uniqueResults[0][uniqueResults[0].length - 1].Arrival_IATA\r\n  );\r\n\r\n  // Helper function to sort results based on different criteria (stops, distance, cabin class prices)\r\n  const getSortedResults = (results) => {\r\n    const sortedResults = [...results];\r\n    \r\n    if (sortConfig.key) {\r\n      sortedResults.sort((a, b) => {\r\n        let aValue, bValue;\r\n        \r\n        switch (sortConfig.key) {\r\n          case 'stops':\r\n            aValue = a.length - 1;\r\n            bValue = b.length - 1;\r\n            break;\r\n          case 'distance':\r\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\r\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\r\n            break;\r\n          case 'economy':\r\n          case 'premium':\r\n          case 'business':\r\n          case 'first':\r\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\r\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\r\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\r\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\r\n            \r\n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\r\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\r\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\r\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\r\n            \r\n            aValue = pricingA?.[sortConfig.key] || 0;\r\n            bValue = pricingB?.[sortConfig.key] || 0;\r\n            break;\r\n          case 'departure':\r\n            aValue = a[0].Departure_IATA;\r\n            bValue = b[0].Departure_IATA;\r\n            break;\r\n          case 'arrival':\r\n            aValue = a[a.length - 1].Arrival_IATA;\r\n            bValue = b[b.length - 1].Arrival_IATA;\r\n            break;\r\n          default:\r\n            return 0;\r\n        }\r\n\r\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\r\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return sortedResults;\r\n  };\r\n\r\n  // Filters results based on search terms matching airport codes\r\n  const filterResults = (results) => {\r\n    if (!searchTerm) return results;\r\n    \r\n    const searchTerms = searchTerm.toUpperCase().trim().split(/\\s+/);\r\n    \r\n    return results.filter(itinerary => {\r\n      // Extract all airports in the route\r\n      const routeAirports = [\r\n        ...new Set([\r\n          itinerary[0].Departure_IATA,\r\n          ...itinerary.map(segment => segment.Arrival_IATA)\r\n        ])\r\n      ];\r\n      \r\n      // Check if all search terms exist in the route airports (any order)\r\n      return searchTerms.every(term => \r\n        routeAirports.some(airport => airport.includes(term))\r\n      );\r\n    });\r\n  };\r\n\r\n  // Apply filtering to unique results\r\n  const filteredResults = filterResults(uniqueResults);\r\n  const sortedResults = getSortedResults(filteredResults);\r\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\r\n  const startIndex = (currentPage - 1) * resultsPerPage;\r\n  const endIndex = startIndex + resultsPerPage;\r\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const getSortIcon = (key) => {\r\n    if (sortConfig.key !== key) return <FaSort className=\"sort-icon\" />;\r\n    return sortConfig.direction === 'asc' ? \r\n      <FaSortUp className=\"sort-icon active\" /> : \r\n      <FaSortDown className=\"sort-icon active\" />;\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to first page when searching\r\n  };\r\n\r\n  // Renders pagination controls with ellipsis for large page counts\r\n  const renderPagination = () => {\r\n    if (totalPages <= 1) return null;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <button \r\n          onClick={() => setCurrentPage(1)}\r\n          disabled={currentPage === 1}\r\n          className=\"pagination-first\"\r\n        >\r\n          First\r\n        </button>\r\n        <button \r\n          onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        \r\n        <div className=\"page-numbers\">\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1)\r\n            .filter(pageNum => \r\n              pageNum === 1 || \r\n              pageNum === totalPages || \r\n              Math.abs(pageNum - currentPage) <= 1\r\n            )\r\n            .map((pageNum, idx, arr) => (\r\n              <React.Fragment key={pageNum}>\r\n                {idx > 0 && arr[idx - 1] !== pageNum - 1 && <span>...</span>}\r\n                <button\r\n                  className={pageNum === currentPage ? 'active' : ''}\r\n                  onClick={() => setCurrentPage(pageNum)}\r\n                >\r\n                  {pageNum}\r\n                </button>\r\n              </React.Fragment>\r\n            ))}\r\n        </div>\r\n\r\n        <button \r\n          onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </button>\r\n        <button \r\n          onClick={() => setCurrentPage(totalPages)}\r\n          disabled={currentPage === totalPages}\r\n          className=\"pagination-last\"\r\n        >\r\n          Last\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"results-container\">\r\n      <div className=\"results-header\">\r\n        <div className=\"header-left\">\r\n          <div className=\"direct-distance\">\r\n            Direct Distance: {directDistance.toLocaleString()} miles\r\n          </div>\r\n          <div className=\"results-count\">\r\n            Showing {startIndex + 1}-{Math.min(endIndex, sortedResults.length)} of {sortedResults.length} routes\r\n          </div>\r\n        </div>\r\n        <div className=\"search-wrapper\">\r\n          <FaSearch className=\"search-icon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search airports...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"search-input\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"flight-results\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"sortable\" onClick={() => handleSort('departure')}>\r\n              From <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th className=\"sortable\" onClick={() => handleSort('arrival')}>\r\n              To <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th className=\"sortable\" onClick={() => handleSort('stops')}>\r\n              Stops <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th>Layovers</th>\r\n            <th className=\"sortable\" onClick={() => handleSort('distance')}>\r\n              Distance <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th className=\"sortable\" onClick={() => handleSort('economy')}>\r\n              Economy <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th className=\"sortable\" onClick={() => handleSort('business')}>\r\n              Business <FaSort className=\"sort-icon\" />\r\n            </th>\r\n            <th className=\"sortable\" onClick={() => handleSort('first')}>\r\n              First <FaSort className=\"sort-icon\" />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedResults.map((itinerary, index) => {\r\n            const numStops = itinerary.length - 1;\r\n            const layovers = itinerary\r\n              .slice(0, -1)\r\n              .map((segment) => segment.Arrival_IATA)\r\n              .join(' → ');\r\n            \r\n            const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\r\n            const isDirect = itinerary.length === 1;\r\n            const percentageDiff = directDistance \r\n              ? ((totalDistance / directDistance) - 1) * 100 \r\n              : null;\r\n\r\n            const formattedDiff = percentageDiff !== null \r\n              ? formatPercentageDiff(percentageDiff, isDirect)\r\n              : '-';\r\n\r\n            const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\r\n            const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\r\n            \r\n            const pricing = calculatePrice(\r\n              originAirport.Zone,\r\n              destAirport.Zone,\r\n              totalDistance\r\n            );\r\n\r\n            return (\r\n              <tr key={startIndex + index} className={isDirect ? 'direct-route' : ''}>\r\n                <td>{itinerary[0].Departure_IATA}</td>\r\n                <td>{itinerary[itinerary.length - 1].Arrival_IATA}</td>\r\n                <td>{numStops}</td>\r\n                <td className=\"layovers\">{layovers || '-'}</td>\r\n                <td>{formattedDiff}</td>\r\n                <td className=\"price-column\">{formatPrice(pricing?.economy)}</td>\r\n                <td className=\"price-column\">{formatPrice(pricing?.business)}</td>\r\n                <td className=\"price-column\">{formatPrice(pricing?.first)}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {renderPagination()}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}