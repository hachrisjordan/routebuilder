{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/Documents/git/routebuilder/src/components/FlightResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch, FaTimes } from 'react-icons/fa';\n\n// Helper Functions\n// Calculates the direct \"as the crow flies\" distance between two airports using the Haversine formula\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  if (!originAirport || !destAirport) return null;\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return Math.round(R * c);\n}\n\n// Looks up the award pricing based on regions and distance from the pricing chart\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => rule['From Region'] === fromRegion && rule['To Region'] === toRegion && totalDistance >= rule['Min Distance'] && totalDistance <= rule['Max Distance']);\n  if (!pricingRule) return null;\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\n\n// Formats mile amounts with thousands separators\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\n\n// Formats the percentage difference from direct distance, showing \"Direct\" for non-stop flights\nfunction formatPercentageDiff(percentageDiff, isDirect) {\n  if (isDirect) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\n\n// Removes duplicate routes and sorts by layovers then distance\nfunction removeDuplicateRoutes(routes) {\n  console.log('Before sorting and deduplication:', routes.map(route => ({\n    path: route.map(seg => `${seg.Departure_IATA}-${seg.Arrival_IATA}`).join(' -> '),\n    segments: route.length,\n    distance: route.reduce((sum, seg) => sum + seg.Distance, 0)\n  })));\n  const seen = new Set();\n  const filteredRoutes = routes.filter(route => {\n    const routeKey = route.map(segment => `${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`).join('|');\n    if (seen.has(routeKey)) return false;\n    seen.add(routeKey);\n    return true;\n  }).sort((a, b) => {\n    const layoversA = a.length - 1;\n    const layoversB = b.length - 1;\n    if (layoversA !== layoversB) {\n      return layoversA - layoversB;\n    }\n    const distanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n    const distanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n    return distanceA - distanceB;\n  });\n  console.log('After sorting and deduplication:', filteredRoutes.map(route => ({\n    path: route.map(seg => `${seg.Departure_IATA}-${seg.Arrival_IATA}`).join(' -> '),\n    segments: route.length,\n    distance: route.reduce((sum, seg) => sum + seg.Distance, 0)\n  })));\n  return filteredRoutes;\n}\n\n// Main Component\nexport function FlightResults({\n  results,\n  isVisible\n}) {\n  _s();\n  // State for pagination, sorting and search filtering\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Remove duplicates before any other processing\n  const uniqueResults = removeDuplicateRoutes(results);\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(uniqueResults[0][0].Departure_IATA, uniqueResults[0][uniqueResults[0].length - 1].Arrival_IATA);\n\n  // Helper function to sort results based on different criteria (stops, distance, cabin class prices)\n  const getSortedResults = results => {\n    const sortedResults = [...results];\n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            aValue = (pricingA === null || pricingA === void 0 ? void 0 : pricingA[sortConfig.key]) || 0;\n            bValue = (pricingB === null || pricingB === void 0 ? void 0 : pricingB[sortConfig.key]) || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n    return sortedResults;\n  };\n\n  // Filters results based on search terms matching airport codes\n  const filterResults = results => {\n    if (!searchTerm) return results;\n    const searchTerms = searchTerm.toUpperCase().trim().split(/\\s+/);\n    return results.filter(itinerary => {\n      // Extract all airports in the route\n      const routeAirports = [...new Set([itinerary[0].Departure_IATA, ...itinerary.map(segment => segment.Arrival_IATA)])];\n\n      // Check if all search terms exist in the route airports (any order)\n      return searchTerms.every(term => routeAirports.some(airport => airport.includes(term)));\n    });\n  };\n\n  // Apply filtering to unique results\n  const filteredResults = filterResults(uniqueResults);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    setCurrentPage(1);\n  };\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) return /*#__PURE__*/_jsxDEV(FaSort, {\n      className: \"sort-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 40\n    }, this);\n    return sortConfig.direction === 'asc' ? /*#__PURE__*/_jsxDEV(FaSortUp, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(FaSortDown, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n\n  // Renders pagination controls with ellipsis for large page counts\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        className: \"pagination-first\",\n        children: \"First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: Array.from({\n          length: totalPages\n        }, (_, i) => i + 1).filter(pageNum => pageNum === 1 || pageNum === totalPages || Math.abs(pageNum - currentPage) <= 1).map((pageNum, idx, arr) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [idx > 0 && arr[idx - 1] !== pageNum - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: pageNum === currentPage ? 'active' : '',\n            onClick: () => setCurrentPage(pageNum),\n            children: pageNum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, pageNum, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages,\n        className: \"pagination-last\",\n        children: \"Last\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"direct-distance\",\n          children: [\"Direct Distance: \", directDistance.toLocaleString(), \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [\"Showing \", startIndex + 1, \"-\", Math.min(endIndex, sortedResults.length), \" of \", sortedResults.length, \" routes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search airports...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"flight-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('departure'),\n            children: [\"From \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('arrival'),\n            children: [\"To \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('stops'),\n            children: [\"Stops \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Layovers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('distance'),\n            children: [\"Distance \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('economy'),\n            children: [\"Economy \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('business'),\n            children: [\"Business \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sortable\",\n            onClick: () => handleSort('first'),\n            children: [\"First \", /*#__PURE__*/_jsxDEV(FaSort, {\n              className: \"sort-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedResults.map((itinerary, index) => {\n          const numStops = itinerary.length - 1;\n          const layovers = itinerary.slice(0, -1).map(segment => segment.Arrival_IATA).join(' → ');\n          const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n          const isDirect = itinerary.length === 1;\n          const percentageDiff = directDistance ? (totalDistance / directDistance - 1) * 100 : null;\n          const formattedDiff = percentageDiff !== null ? formatPercentageDiff(percentageDiff, isDirect) : '-';\n          const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n          const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n          const pricing = calculatePrice(originAirport.Zone, destAirport.Zone, totalDistance);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: isDirect ? 'direct-route' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[0].Departure_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: itinerary[itinerary.length - 1].Arrival_IATA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: numStops\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"layovers\",\n              children: layovers || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formattedDiff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.economy)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.business)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"price-column\",\n              children: formatPrice(pricing === null || pricing === void 0 ? void 0 : pricing.first)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, startIndex + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), renderPagination()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(FlightResults, \"WgmTMnb8WayQzfU7xcW4R6u1YwA=\");\n_c = FlightResults;\nvar _c;\n$RefreshReg$(_c, \"FlightResults\");","map":{"version":3,"names":["React","useState","airports","pricingChart","FaSort","FaSortUp","FaSortDown","FaSearch","FaTimes","jsxDEV","_jsxDEV","calculateDirectDistance","origin","destination","originAirport","find","a","IATA","destAirport","R","lat1","Latitude","Math","PI","lat2","dLat","dLon","Longitude","sin","cos","c","atan2","sqrt","round","calculatePrice","fromRegion","toRegion","totalDistance","pricingRule","rule","economy","Economy","premium","business","Business","first","First","formatPrice","miles","toLocaleString","formatPercentageDiff","percentageDiff","isDirect","toFixed","removeDuplicateRoutes","routes","console","log","map","route","path","seg","Departure_IATA","Arrival_IATA","join","segments","length","distance","reduce","sum","Distance","seen","Set","filteredRoutes","filter","routeKey","segment","has","add","sort","b","layoversA","layoversB","distanceA","distanceB","FlightResults","results","isVisible","_s","currentPage","setCurrentPage","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","resultsPerPage","uniqueResults","directDistance","getSortedResults","sortedResults","aValue","bValue","originAirportA","airport","destAirportA","totalDistanceA","pricingA","Zone","originAirportB","destAirportB","totalDistanceB","pricingB","filterResults","searchTerms","toUpperCase","trim","split","itinerary","routeAirports","every","term","some","includes","filteredResults","totalPages","ceil","startIndex","endIndex","paginatedResults","slice","handleSort","getSortIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","e","target","value","renderPagination","children","onClick","disabled","p","max","Array","from","_","i","pageNum","abs","idx","arr","Fragment","min","type","placeholder","onChange","index","numStops","layovers","formattedDiff","pricing","_c","$RefreshReg$"],"sources":["/Users/hanguyen/Documents/git/routebuilder/src/components/FlightResults.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './FlightResults.css';\nimport { airports } from '../data/airports';\nimport pricingChart from '../data/formatted_partner_airlines_pricing_chart.json';\nimport { FaSort, FaSortUp, FaSortDown, FaSearch, FaTimes } from 'react-icons/fa';\n\n// Helper Functions\n// Calculates the direct \"as the crow flies\" distance between two airports using the Haversine formula\nfunction calculateDirectDistance(origin, destination) {\n  const originAirport = airports.find(a => a.IATA === origin);\n  const destAirport = airports.find(a => a.IATA === destination);\n  \n  if (!originAirport || !destAirport) return null;\n\n  const R = 3959; // Earth's radius in miles\n  const lat1 = originAirport.Latitude * Math.PI / 180;\n  const lat2 = destAirport.Latitude * Math.PI / 180;\n  const dLat = (destAirport.Latitude - originAirport.Latitude) * Math.PI / 180;\n  const dLon = (destAirport.Longitude - originAirport.Longitude) * Math.PI / 180;\n\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n           Math.cos(lat1) * Math.cos(lat2) *\n           Math.sin(dLon/2) * Math.sin(dLon/2);\n  \n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return Math.round(R * c);\n}\n\n// Looks up the award pricing based on regions and distance from the pricing chart\nfunction calculatePrice(fromRegion, toRegion, totalDistance) {\n  const pricingRule = pricingChart.find(rule => \n    rule['From Region'] === fromRegion &&\n    rule['To Region'] === toRegion &&\n    totalDistance >= rule['Min Distance'] &&\n    totalDistance <= rule['Max Distance']\n  );\n\n  if (!pricingRule) return null;\n\n  return {\n    economy: pricingRule.Economy,\n    premium: pricingRule['Premium Economy'],\n    business: pricingRule.Business,\n    first: pricingRule.First\n  };\n}\n\n// Formats mile amounts with thousands separators\nfunction formatPrice(miles) {\n  if (!miles) return '-';\n  return miles.toLocaleString();\n}\n\n// Formats the percentage difference from direct distance, showing \"Direct\" for non-stop flights\nfunction formatPercentageDiff(percentageDiff, isDirect) {\n  if (isDirect) return 'Direct';\n  if (percentageDiff < 1) {\n    return `+${percentageDiff.toFixed(2)}%`;\n  }\n  return `+${Math.round(percentageDiff)}%`;\n}\n\n// Removes duplicate routes and sorts by layovers then distance\nfunction removeDuplicateRoutes(routes) {\n  console.log('Before sorting and deduplication:', \n    routes.map(route => ({\n      path: route.map(seg => `${seg.Departure_IATA}-${seg.Arrival_IATA}`).join(' -> '),\n      segments: route.length,\n      distance: route.reduce((sum, seg) => sum + seg.Distance, 0)\n    }))\n  );\n\n  const seen = new Set();\n  \n  const filteredRoutes = routes\n    .filter(route => {\n      const routeKey = route.map(segment => \n        `${segment.Departure_IATA}-${segment.Arrival_IATA}-${segment.Distance}`\n      ).join('|');\n      \n      if (seen.has(routeKey)) return false;\n      seen.add(routeKey);\n      return true;\n    })\n    .sort((a, b) => {\n      const layoversA = a.length - 1;\n      const layoversB = b.length - 1;\n      if (layoversA !== layoversB) {\n        return layoversA - layoversB;\n      }\n      \n      const distanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n      const distanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n      return distanceA - distanceB;\n    });\n\n  console.log('After sorting and deduplication:', \n    filteredRoutes.map(route => ({\n      path: route.map(seg => `${seg.Departure_IATA}-${seg.Arrival_IATA}`).join(' -> '),\n      segments: route.length,\n      distance: route.reduce((sum, seg) => sum + seg.Distance, 0)\n    }))\n  );\n\n  return filteredRoutes;\n}\n\n// Main Component\nexport function FlightResults({ results, isVisible }) {\n  // State for pagination, sorting and search filtering\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const resultsPerPage = 25;\n\n  if (!isVisible || !results || results.length === 0) return null;\n\n  // Remove duplicates before any other processing\n  const uniqueResults = removeDuplicateRoutes(results);\n\n  // Calculate direct distance\n  const directDistance = calculateDirectDistance(\n    uniqueResults[0][0].Departure_IATA,\n    uniqueResults[0][uniqueResults[0].length - 1].Arrival_IATA\n  );\n\n  // Helper function to sort results based on different criteria (stops, distance, cabin class prices)\n  const getSortedResults = (results) => {\n    const sortedResults = [...results];\n    \n    if (sortConfig.key) {\n      sortedResults.sort((a, b) => {\n        let aValue, bValue;\n        \n        switch (sortConfig.key) {\n          case 'stops':\n            aValue = a.length - 1;\n            bValue = b.length - 1;\n            break;\n          case 'distance':\n            aValue = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            bValue = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            break;\n          case 'economy':\n          case 'premium':\n          case 'business':\n          case 'first':\n            const originAirportA = airports.find(airport => airport.IATA === a[0].Departure_IATA);\n            const destAirportA = airports.find(airport => airport.IATA === a[a.length - 1].Arrival_IATA);\n            const totalDistanceA = a.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingA = calculatePrice(originAirportA.Zone, destAirportA.Zone, totalDistanceA);\n            \n            const originAirportB = airports.find(airport => airport.IATA === b[0].Departure_IATA);\n            const destAirportB = airports.find(airport => airport.IATA === b[b.length - 1].Arrival_IATA);\n            const totalDistanceB = b.reduce((sum, segment) => sum + segment.Distance, 0);\n            const pricingB = calculatePrice(originAirportB.Zone, destAirportB.Zone, totalDistanceB);\n            \n            aValue = pricingA?.[sortConfig.key] || 0;\n            bValue = pricingB?.[sortConfig.key] || 0;\n            break;\n          case 'departure':\n            aValue = a[0].Departure_IATA;\n            bValue = b[0].Departure_IATA;\n            break;\n          case 'arrival':\n            aValue = a[a.length - 1].Arrival_IATA;\n            bValue = b[b.length - 1].Arrival_IATA;\n            break;\n          default:\n            return 0;\n        }\n\n        if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;\n        if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;\n        return 0;\n      });\n    }\n\n    return sortedResults;\n  };\n\n  // Filters results based on search terms matching airport codes\n  const filterResults = (results) => {\n    if (!searchTerm) return results;\n    \n    const searchTerms = searchTerm.toUpperCase().trim().split(/\\s+/);\n    \n    return results.filter(itinerary => {\n      // Extract all airports in the route\n      const routeAirports = [\n        ...new Set([\n          itinerary[0].Departure_IATA,\n          ...itinerary.map(segment => segment.Arrival_IATA)\n        ])\n      ];\n      \n      // Check if all search terms exist in the route airports (any order)\n      return searchTerms.every(term => \n        routeAirports.some(airport => airport.includes(term))\n      );\n    });\n  };\n\n  // Apply filtering to unique results\n  const filteredResults = filterResults(uniqueResults);\n  const sortedResults = getSortedResults(filteredResults);\n  const totalPages = Math.ceil(sortedResults.length / resultsPerPage);\n  const startIndex = (currentPage - 1) * resultsPerPage;\n  const endIndex = startIndex + resultsPerPage;\n  const paginatedResults = sortedResults.slice(startIndex, endIndex);\n\n  const handleSort = (key) => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({ key, direction });\n    setCurrentPage(1);\n  };\n\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) return <FaSort className=\"sort-icon\" />;\n    return sortConfig.direction === 'asc' ? \n      <FaSortUp className=\"sort-icon active\" /> : \n      <FaSortDown className=\"sort-icon active\" />;\n  };\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1); // Reset to first page when searching\n  };\n\n  // Renders pagination controls with ellipsis for large page counts\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n\n    return (\n      <div className=\"pagination\">\n        <button \n          onClick={() => setCurrentPage(1)}\n          disabled={currentPage === 1}\n          className=\"pagination-first\"\n        >\n          First\n        </button>\n        <button \n          onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        \n        <div className=\"page-numbers\">\n          {Array.from({ length: totalPages }, (_, i) => i + 1)\n            .filter(pageNum => \n              pageNum === 1 || \n              pageNum === totalPages || \n              Math.abs(pageNum - currentPage) <= 1\n            )\n            .map((pageNum, idx, arr) => (\n              <React.Fragment key={pageNum}>\n                {idx > 0 && arr[idx - 1] !== pageNum - 1 && <span>...</span>}\n                <button\n                  className={pageNum === currentPage ? 'active' : ''}\n                  onClick={() => setCurrentPage(pageNum)}\n                >\n                  {pageNum}\n                </button>\n              </React.Fragment>\n            ))}\n        </div>\n\n        <button \n          onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n          disabled={currentPage === totalPages}\n        >\n          Next\n        </button>\n        <button \n          onClick={() => setCurrentPage(totalPages)}\n          disabled={currentPage === totalPages}\n          className=\"pagination-last\"\n        >\n          Last\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-header\">\n        <div className=\"header-left\">\n          <div className=\"direct-distance\">\n            Direct Distance: {directDistance.toLocaleString()} miles\n          </div>\n          <div className=\"results-count\">\n            Showing {startIndex + 1}-{Math.min(endIndex, sortedResults.length)} of {sortedResults.length} routes\n          </div>\n        </div>\n        <div className=\"search-wrapper\">\n          <FaSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search airports...\"\n            value={searchTerm}\n            onChange={handleSearch}\n            className=\"search-input\"\n          />\n        </div>\n      </div>\n\n      <table className=\"flight-results\">\n        <thead>\n          <tr>\n            <th className=\"sortable\" onClick={() => handleSort('departure')}>\n              From <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('arrival')}>\n              To <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('stops')}>\n              Stops <FaSort className=\"sort-icon\" />\n            </th>\n            <th>Layovers</th>\n            <th className=\"sortable\" onClick={() => handleSort('distance')}>\n              Distance <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('economy')}>\n              Economy <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('business')}>\n              Business <FaSort className=\"sort-icon\" />\n            </th>\n            <th className=\"sortable\" onClick={() => handleSort('first')}>\n              First <FaSort className=\"sort-icon\" />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedResults.map((itinerary, index) => {\n            const numStops = itinerary.length - 1;\n            const layovers = itinerary\n              .slice(0, -1)\n              .map((segment) => segment.Arrival_IATA)\n              .join(' → ');\n            \n            const totalDistance = itinerary.reduce((sum, segment) => sum + segment.Distance, 0);\n            const isDirect = itinerary.length === 1;\n            const percentageDiff = directDistance \n              ? ((totalDistance / directDistance) - 1) * 100 \n              : null;\n\n            const formattedDiff = percentageDiff !== null \n              ? formatPercentageDiff(percentageDiff, isDirect)\n              : '-';\n\n            const originAirport = airports.find(a => a.IATA === itinerary[0].Departure_IATA);\n            const destAirport = airports.find(a => a.IATA === itinerary[itinerary.length - 1].Arrival_IATA);\n            \n            const pricing = calculatePrice(\n              originAirport.Zone,\n              destAirport.Zone,\n              totalDistance\n            );\n\n            return (\n              <tr key={startIndex + index} className={isDirect ? 'direct-route' : ''}>\n                <td>{itinerary[0].Departure_IATA}</td>\n                <td>{itinerary[itinerary.length - 1].Arrival_IATA}</td>\n                <td>{numStops}</td>\n                <td className=\"layovers\">{layovers || '-'}</td>\n                <td>{formattedDiff}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.economy)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.business)}</td>\n                <td className=\"price-column\">{formatPrice(pricing?.first)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {renderPagination()}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}